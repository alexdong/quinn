# Postmark Email Service Documentation

## Overview
Postmark is an email service provider specializing in transactional email delivery and processing. It offers both outbound email sending and inbound email processing capabilities.

## Send Email API

### Authentication
- Header: `X-Postmark-Server-Token: your-server-token`
- Test mode: Use `POSTMARK_API_TEST` as token for testing

### API Endpoints
- Single email: `POST https://api.postmarkapp.com/email`
- Batch emails: `POST https://api.postmarkapp.com/email/batch`

### Required Parameters
- `From`: Sender email address
- `To`: Recipient email address
- `Subject`: Email subject (max 2000 characters)
- `TextBody` or `HtmlBody`: Email content

### Optional Parameters
- `MessageStream`: Defaults to "outbound"
- `Attachments`: Up to 10MB total
- `TrackOpens`: Enable open tracking
- `TrackLinks`: Enable link tracking
- `Cc`, `Bcc`: Carbon copy recipients

### Example Request
```bash
curl "https://api.postmarkapp.com/email" \
  -X POST \
  -H "Accept: application/json" \
  -H "Content-Type: application/json" \
  -H "X-Postmark-Server-Token: server-token" \
  -d '{
    "From": "sender@example.com",
    "To": "receiver@example.com",
    "Subject": "Postmark test",
    "TextBody": "Hello dear Postmark user."
  }'
```

### Response Structure
- `ErrorCode`: Success indicator
- `Message`: Status message
- `MessageID`: Unique message identifier
- `SubmittedAt`: Timestamp
- `To`: Recipient address

### Limits
- Max 50 recipients per message
- Batch sending up to 500 messages per request
- Certain file types forbidden in attachments

## Inbound Email Processing

### Overview
Inbound processing converts incoming emails to structured JSON and delivers them via webhook. Format: `hash@inbound.postmarkapp.com`

### Setup Steps
1. Configure an inbound server
2. Set up inbound domain forwarding
3. Parse incoming emails
4. Configure inbound blocking (optional)

### Key Features
- Converts inbound emails to JSON format
- Webhook delivery of processed emails
- Custom routing and processing
- Spam assessment headers
- Attachment handling

## Inbound Webhooks

### Webhook Payload Structure
- `From`, `FromFull`: Sender details
- `To`, `ToFull`, `Cc`, `Bcc`: Recipient information
- `TextBody`, `HtmlBody`: Message content
- `Attachments`: File attachments
- `MessageID`: Unique identifier
- `MailboxHash`: For plus addressing

```JSON
{
  "From": "myUser@theirDomain.com",
  "MessageStream": "inbound",
  "FromName": "My User",
  "FromFull": {
    "Email": "myUser@theirDomain.com",
    "Name": "John Doe",
    "MailboxHash": ""
  },
  "To": "451d9b70cf9364d23ff6f9d51d870251569e+ahoy@inbound.postmarkapp.com",
  "ToFull": [
    {
      "Email": "451d9b70cf9364d23ff6f9d51d870251569e+ahoy@inbound.postmarkapp.com",
      "Name": "",
      "MailboxHash": "ahoy"
    }
  ],
  "Cc": "\"Full name\" <sample.cc@emailDomain.com>, \"Another Cc\" <another.cc@emailDomain.com>",
  "CcFull": [
    {
      "Email": "sample.cc@emailDomain.com",
      "Name": "Full name",
      "MailboxHash": ""
    },
    {
      "Email": "another.cc@emailDomain.com",
      "Name": "Another Cc",
      "MailboxHash": ""
    }
  ],
  "Bcc": "\"Full name\" <451d9b70cf9364d23ff6f9d51d870251569e@inbound.postmarkapp.com>",
  "BccFull": [
    {
      "Email": "451d9b70cf9364d23ff6f9d51d870251569e@inbound.postmarkapp.com",
      "Name": "Full name",
      "MailboxHash": ""
    }
  ],
  "OriginalRecipient": "451d9b70cf9364d23ff6f9d51d870251569e+ahoy@inbound.postmarkapp.com",
  "ReplyTo": "myUsersReplyAddress@theirDomain.com",
  "Subject": "This is an inbound message",
  "MessageID": "22c74902-a0c1-4511-804f-341342852c90",
  "Date": "Thu, 5 Apr 2012 16:59:01 +0200",
  "MailboxHash": "ahoy",
  "TextBody": "[ASCII]",
  "HtmlBody": "[HTML]",
  "StrippedTextReply": "Ok, thanks for letting me know!",
  "Tag": "",
  "Headers": [
    {
      "Name": "X-Spam-Checker-Version",
      "Value": "SpamAssassin 3.3.1 (2010-03-16) onrs-ord-pm-inbound1.wildbit.com"
    },
    {
      "Name": "X-Spam-Status",
      "Value": "No"
    },
    {
      "Name": "X-Spam-Score",
      "Value": "-0.1"
    },
    {
      "Name": "X-Spam-Tests",
      "Value": "DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,SPF_PASS"
    },
    {
      "Name": "Received-SPF",
      "Value": "Pass (sender SPF authorized) identity=mailfrom; client-ip=209.85.160.180; helo=mail-gy0-f180.google.com; envelope-from=myUser@theirDomain.com; receiver=451d9b70cf9364d23ff6f9d51d870251569e+ahoy@inbound.postmarkapp.com"
    },
    {
      "Name": "DKIM-Signature",
      "Value": "v=1; a=rsa-sha256; c=relaxed/relaxed;        d=wildbit.com; s=google;        h=mime-version:reply-to:message-id:subject:from:to:cc         :content-type;        bh=cYr/+oQiklaYbBJOQU3CdAnyhCTuvemrU36WT7cPNt0=;        b=QsegXXbTbC4CMirl7A3VjDHyXbEsbCUTPL5vEHa7hNkkUTxXOK+dQA0JwgBHq5C+1u         iuAJMz+SNBoTqEDqte2ckDvG2SeFR+Edip10p80TFGLp5RucaYvkwJTyuwsA7xd78NKT         Q9ou6L1hgy/MbKChnp2kxHOtYNOrrszY3JfQM="
    },
    {
      "Name": "MIME-Version",
      "Value": "1.0"
    },
    {
      "Name": "Message-ID",
      "Value": "<CAGXpo2WKfxHWZ5UFYCR3H_J9SNMG+5AXUovfEFL6DjWBJSyZaA@mail.gmail.com>"
    }
  ],
  "Attachments": [
    {
      "Name": "myimage.png",
      "Content": "[BASE64-ENCODED CONTENT]",
      "ContentType": "image/png",
      "ContentLength": 4096,
      "ContentID": "myimage.png@01CE7342.75E71F80"
    },
    {
      "Name": "mypaper.doc",
      "Content": "[BASE64-ENCODED CONTENT]",
      "ContentType": "application/msword",
      "ContentLength": 16384,
      "ContentID": ""
    }
  ]
}
```

### Configuration
- Set webhook URL via Postmark website or API
- Configure per Inbound Message Stream
- Supports "plus addressing" with MailboxHash

### Retry Logic
- 10 total retry attempts
- Increasing time intervals (1 minute to 6 hours)
- Stops retrying on 403 responses

### Testing
Use curl to simulate webhook POST requests:
```bash
curl -X POST your-webhook-url \
  -H "Content-Type: application/json" \
  -d '{webhook-payload}'
```

## Common Use Cases
- Processing email replies for tickets/comments
- Handling user-generated email interactions
- Converting emails to application data
- Automated email processing workflows

## Security Considerations
- Validate webhook signatures
- Implement proper error handling
- Use HTTPS for webhook endpoints
- Consider rate limiting for webhook endpoints

---
Source: https://postmarkapp.com/developer/user-guide/inbound, https://postmarkapp.com/developer/user-guide/send-email-with-api, https://postmarkapp.com/developer/webhooks/inbound-webhook
Retrieved: 2025-07-10
Method: WebFetch from official Postmark documentation